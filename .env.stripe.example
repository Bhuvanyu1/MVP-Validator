# Stripe Payment Processing Configuration
# Follow these steps to set up Stripe payment integration:

# 1. Create a Stripe account at https://stripe.com/
# 2. Get your API keys from the Stripe Dashboard
# 3. Set up webhook endpoints for payment notifications
# 4. Configure your payment flow and products

# Stripe API Credentials
STRIPE_PUBLISHABLE_KEY=pk_test_your_publishable_key_here
STRIPE_SECRET_KEY=sk_test_your_secret_key_here
STRIPE_WEBHOOK_SECRET=whsec_your_webhook_secret_here

# Instructions:
# 1. Copy this file to .env.local and fill in your actual credentials
# 2. Never commit actual credentials to version control
# 3. Use test keys (pk_test_* and sk_test_*) for development
# 4. Use live keys (pk_live_* and sk_live_*) for production

# Webhook Configuration:
# 1. Go to Stripe Dashboard > Developers > Webhooks
# 2. Add endpoint: https://your-domain.com/api/webhooks/stripe
# 3. Select events: payment_intent.succeeded, payment_intent.payment_failed, checkout.session.completed
# 4. Copy the webhook signing secret to STRIPE_WEBHOOK_SECRET

# Features enabled with Stripe integration:
# - $100 MVP validation service payments
# - Secure payment processing via Stripe Checkout
# - Real-time payment status updates
# - Automatic project status updates on successful payment
# - Payment history and transaction tracking
# - Webhook-based payment notifications

# Payment Flow:
# 1. User clicks "Pay for Validation Service" in project details
# 2. PaymentModal opens with service details and pricing
# 3. User clicks "Pay with Stripe" to redirect to Stripe Checkout
# 4. After successful payment, user returns to project with updated status
# 5. Webhook updates database with payment confirmation

# Note: Without these credentials, payment functionality will be disabled
